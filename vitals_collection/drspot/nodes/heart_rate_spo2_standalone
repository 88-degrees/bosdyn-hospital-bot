#!/usr/bin/env python

# Copyright 2020 Boston Dynamics Inc.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import rospy
import message_filters
from sensor_msgs.msg import Image
from geometry_msgs.msg import PolygonStamped

from drspot.vitals.heart_rate_spo2 import HeartRate
from drspot.vitals.heart_rate_spo2 import IMG_QUEUE_SIZE, IMG_BUF_SIZE

from drspot.vitals.heart_rate_spo2 import RED_IMAGE_TOPIC, RED_REGION_IN_IMAGE_TOPIC
from drspot.vitals.heart_rate_spo2 import NIR_IMAGE_TOPIC, NIR_REGION_IN_IMAGE_TOPIC
from drspot.vitals.heart_rate_spo2 import NARROW_NIR_IMAGE_TOPIC, NARROW_NIR_REGION_IN_IMAGE_TOPIC

if __name__ == '__main__':
    rospy.init_node('heart_rate_spo2')
    hr = HeartRate(rospy.get_name())

    hr.red_image_sub = message_filters.Subscriber(RED_IMAGE_TOPIC, Image,
                                                  queue_size=IMG_QUEUE_SIZE,
                                                  buff_size=IMG_BUF_SIZE)
    hr.red_region_sub = message_filters.Subscriber(RED_REGION_IN_IMAGE_TOPIC,
                                                   PolygonStamped,
                                                   queue_size=IMG_QUEUE_SIZE)

    hr.nir_image_sub = message_filters.Subscriber(NIR_IMAGE_TOPIC, Image,
                                                  queue_size=IMG_QUEUE_SIZE,
                                                  buff_size=IMG_BUF_SIZE)
    hr.nir_region_sub = message_filters.Subscriber(NIR_REGION_IN_IMAGE_TOPIC,
                                                   PolygonStamped,
                                                   queue_size=IMG_QUEUE_SIZE)

    hr.narrow_nir_image_sub = message_filters.Subscriber(NARROW_NIR_IMAGE_TOPIC, Image,
                                                         queue_size=IMG_QUEUE_SIZE,
                                                         buff_size=IMG_BUF_SIZE)
    hr.narrow_nir_region_sub = message_filters.Subscriber(NARROW_NIR_REGION_IN_IMAGE_TOPIC,
                                                          PolygonStamped,
                                                          queue_size=IMG_QUEUE_SIZE)

    hr.approx_image_sync = message_filters.ApproximateTimeSynchronizer([hr.red_image_sub,
                                                                        hr.nir_image_sub,
                                                                        hr.narrow_nir_image_sub,
                                                                        hr.red_region_sub,
                                                                        hr.nir_region_sub,
                                                                        hr.narrow_nir_region_sub],
                                                                       200, 0.1)
    hr.approx_image_sync.registerCallback(hr.synced_callback)

    rospy.spin()
