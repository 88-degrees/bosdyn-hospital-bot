<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="launch_drivers" default="true" />
  <arg name="launch_multichrome_tracker" default="true" />
  <arg name="launch_heart_rate_spo2" default="true" />
  <arg name="launch_thermal_algos" default="true" />
  <arg name="use_thermal_reference" default="true" />
  <arg name="launch_mode_manager" default="true" />

  <arg name="multichrome_exposure_time" default="27800" />
  <arg name="multichrome_gain" default="0.0" />

  <arg name="trigger_slave_from_master" default="false" />
  <arg name="multichrome_provider" default="$(optenv DRSPOT_MULTICHROME_PROVIDER spinnaker_sdk_camera_driver)" />

  <arg name="thermal_ns" default="$(optenv DRSPOT_THERMAL_NS optris)" />

  <group if="$(arg launch_mode_manager)">
    <node name="mode_manager" pkg="drspot" type="mode_manager"
          output="screen" respawn="true">
      <remap from="thermal_stream_enable" to="$(arg thermal_ns)/thermal_stream_enable" />
    </node>
  </group>

  <group if="$(eval multichrome_provider == 'spinnaker_sdk_camera_driver')">
    <group if="$(arg launch_drivers)">
      <include file="$(find spinnaker_sdk_camera_driver)/launch/acquisition_node.launch">
        <arg name="config_file" default="/etc/ros/params/spinnaker_sdk_camera_driver_params.yaml" />
        <arg name="exposure_time" value="$(arg multichrome_exposure_time)" />
        <arg name="gain" value="$(arg multichrome_gain" />
        <arg name="trigger_slave_from_master" value="$(arg trigger_slave_from_master)" />
	<arg name="utstamps" value="$(eval not trigger_slave_from_master)" />
	<arg name="rate_div" value="2" />
      </include>
    </group>
  </group>

  <group if="$(arg launch_multichrome_tracker)">
    <remap from="camera_array/mono_red/image_raw" to="camera_array/mono_660/image_raw" />
    <remap from="camera_array/mono_nir/image_raw" to="camera_array/mono_880/image_raw" />
    <remap from="camera_array/mono_narrow_nir/image_raw" to="camera_array/mono_810/image_raw" />

    <group if="$(arg launch_heart_rate_spo2)">
      <node name="multi_tracker_with_hr_spo2" pkg="drspot" type="multi_tracker_with_hr_spo2"
            output="screen" respawn="true">
	<param name="exact_time_sync" value="$(arg trigger_slave_from_master)" />
      </node>
    </group>

    <group unless="$(arg launch_heart_rate_spo2)">
      <node name="multichrome_face_tracker" pkg="drspot" type="multichrome_face_tracker_standalone"
            output="screen" respawn="true">
      </node>
    </group>
  </group>

  <group if="$(eval arg('launch_heart_rate_spo2') and not arg('launch_multichrome_tracker'))">
    <node name="heart_rate_spo2" pkg="drspot" type="heart_rate_spo2_standalone"
          output="screen" respawn="true">
    </node>
  </group>

  <group if="$(eval thermal_ns == 'optris')">
    <group if="$(arg launch_drivers)">
      <include file="$(find optris_drivers)/launch/optris_drivers.launch" />
    </group>
  </group>

  <group if="$(eval thermal_ns == 'flir_camera')">
    <group if="$(arg launch_drivers)">
      <include file="$(find maskor_gige_cam)/launch/a325sc_driver.launch" />
    </group>
  </group>

  <param name="use_thermal_reference" value="$(arg use_thermal_reference)" />
  <group if="$(arg use_thermal_reference)">
    <arg name="thermal_ref_config_file" default="/etc/ros/params/thermal_reference_params.yaml" />
    <rosparam command="load" file="$(arg thermal_ref_config_file)" ns="thermal_reference_prm" />

    <group if="$(arg launch_drivers)">
      <node name="thermal_reference" pkg="drspot" type="thermal_reference" output="screen"
            respawn="true" respawn_delay="10">
      </node>
    </group>
  </group>

  <group if="$(arg launch_thermal_algos)">
    <remap from="temperature_image" to="$(arg thermal_ns)/temperature_image" />
    <remap from="thermal_image_raw" to="$(arg thermal_ns)/thermal_image_raw" />

    <node name="ir_face_tracker" pkg="drspot" type="ir_face_tracker" output="screen"
          respawn="true">
    </node>

    <node name="respiratory_rate" pkg="drspot" type="respiratory_rate" output="screen"
          respawn="true">
    </node>

    <node name="skin_temperature" pkg="drspot" type="skin_temperature" output="screen"
          respawn="true">
    </node>
  </group>
</launch>
